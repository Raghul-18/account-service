-- src/main/resources/db/migration/V1__create_accounts_table.sql

-- Create ACCOUNTS table
CREATE TABLE ACCOUNTS (
    account_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    account_number VARCHAR2(20) UNIQUE NOT NULL,
    account_type VARCHAR2(10) NOT NULL,
    account_status VARCHAR2(20) DEFAULT 'ACTIVE' NOT NULL,
    balance NUMBER(15,2) DEFAULT 0.00 NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    -- Foreign key constraint (references CUSTOMERS table from customer-service)
    CONSTRAINT fk_account_customer FOREIGN KEY (customer_id)
        REFERENCES CUSTOMERS (customer_id) ON DELETE CASCADE,

    -- Unique constraint: One customer can have only one account of each type
    CONSTRAINT uk_customer_account_type UNIQUE (customer_id, account_type),

    -- Check constraints
    CONSTRAINT chk_account_type CHECK (account_type IN ('CURRENT', 'SAVINGS')),
    CONSTRAINT chk_account_status CHECK (account_status IN ('ACTIVE', 'SUSPENDED', 'CLOSED')),
    CONSTRAINT chk_balance_non_negative CHECK (balance >= 0)
);

-- Create indexes for better performance
CREATE INDEX idx_accounts_customer_id ON ACCOUNTS (customer_id);
-- account_number already has an implicit index due to UNIQUE constraint, so no need to create it again
CREATE INDEX idx_accounts_status ON ACCOUNTS (account_status);
CREATE INDEX idx_accounts_created_at ON ACCOUNTS (created_at DESC);

-- Comments for documentation
COMMENT ON TABLE ACCOUNTS IS 'Bank accounts for customers';
COMMENT ON COLUMN ACCOUNTS.account_id IS 'Primary key for account';
COMMENT ON COLUMN ACCOUNTS.customer_id IS 'Reference to CUSTOMERS table';
COMMENT ON COLUMN ACCOUNTS.account_number IS 'Unique account number in format BANK1CUR001, BANK1SAV001';
COMMENT ON COLUMN ACCOUNTS.account_type IS 'Type of account: CURRENT or SAVINGS';
COMMENT ON COLUMN ACCOUNTS.account_status IS 'Account status: ACTIVE, SUSPENDED, or CLOSED';
COMMENT ON COLUMN ACCOUNTS.balance IS 'Current account balance in rupees';
COMMENT ON COLUMN ACCOUNTS.created_at IS 'Account creation timestamp';
